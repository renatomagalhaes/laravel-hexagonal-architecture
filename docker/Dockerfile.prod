# Multi-stage build para produção otimizada
# Stage 1: Build dependencies
FROM php:8.3-fpm AS builder

# Instalar dependências do sistema para build
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip

# Instalar Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Instalar Node.js para build dos assets
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# Configurar diretório de trabalho
WORKDIR /var/www/html

# Copiar arquivos de configuração
COPY docker/php/local.ini /usr/local/etc/php/conf.d/local.ini

# Copiar arquivos de dependências
COPY composer.json composer.lock package.json package-lock.json ./

# Instalar dependências PHP (sem dev dependencies)
RUN composer install --no-dev --optimize-autoloader --no-scripts

# Instalar dependências Node.js
RUN npm ci --only=production

# Copiar código da aplicação
COPY . .

# Build dos assets
RUN npm run build

# Otimizar autoloader
RUN composer dump-autoload --optimize

# Limpar cache e arquivos desnecessários
RUN rm -rf node_modules \
    && rm -rf tests \
    && rm -rf .git \
    && rm -rf storage/logs/* \
    && rm -rf storage/framework/cache/* \
    && rm -rf storage/framework/sessions/* \
    && rm -rf storage/framework/views/*

# Stage 2: Production image
FROM php:8.3-fpm-alpine AS production

# Instalar dependências mínimas para produção
RUN apk add --no-cache \
    libpng-dev \
    libzip-dev \
    zip

# Instalar extensões PHP necessárias
RUN docker-php-ext-install pdo_mysql mbstring zip

# Copiar arquivos de configuração
COPY docker/php/local.ini /usr/local/etc/php/conf.d/local.ini

# Configurar usuário
RUN addgroup -g 1000 www && adduser -u 1000 -G www -s /bin/sh -D www

# Copiar aplicação do stage anterior
COPY --from=builder --chown=www:www /var/www/html /var/www/html

# Configurar permissões
RUN chown -R www:www /var/www/html/storage /var/www/html/bootstrap/cache
RUN chmod -R 755 /var/www/html/storage /var/www/html/bootstrap/cache

# Mudar para usuário www
USER www

# Expor porta
EXPOSE 9000

# Comando padrão
CMD ["php-fpm"]
